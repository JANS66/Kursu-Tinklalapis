{"ast":null,"code":"var _jsxFileName = \"/Users/Sabina/Desktop/Baigiamasis/Kursu-Tinklalapis/kursu-tinklalapis-frontend/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\nimport React, { useState } from 'react';\nimport './RegistrationLoginForm.css';\nimport { useNavigate } from 'react-router-dom';\nimport logo from './logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(props) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    let hasError = false;\n    if (!email.trim()) {\n      setEmailError('El. pastas negali būti tuščias');\n      hasError = true;\n    } else {\n      setEmailError('');\n    }\n    if (!password.trim()) {\n      setPasswordError('Slaptažodis negali būti tuščias');\n      hasError = true;\n    } else if (password.length < 8) {\n      setPasswordError('Slaptažodis turi būti bent 8 simbolių ilgio');\n      hasError = true;\n    } else {\n      setPasswordError('');\n    }\n    if (!hasError) {\n      try {\n        const response = await fetch('/user/authenticate', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data);\n          console.log(JSON.stringify(data));\n          localStorage.setItem('token', data.access_token);\n          console.log(data.userId);\n          localStorage.setItem('userId', data.userId);\n          props.onLogin({\n            email\n          });\n          navigate('/');\n        } else {\n          setEmailError('Vartotojas nerastas');\n        }\n      } catch (error) {\n        console.error(error);\n        alert('Įvyko klaida');\n      }\n    }\n  };\n  const inputErrorStyle = {\n    borderBottom: '1px solid red',\n    outlineColor: 'red'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RegistrationForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"containerLogin\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"registracija-title\",\n        children: \"Prisijunkite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), emailError === 'Vartotojas nerastas', /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          onFocus: event => event.target.placeholder = '',\n          onBlur: event => event.target.placeholder = 'El. pastas',\n          style: emailError ? inputErrorStyle : null,\n          placeholder: \"El. pastas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          onFocus: event => event.target.placeholder = '',\n          onBlur: event => event.target.placeholder = 'Slaptažodis',\n          style: passwordError ? inputErrorStyle : null,\n          placeholder: \"Slapta\\u017Eodis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Prisijungti\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"OEMjGIKf0uyNo1+Wd0uI/AiCj4A=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","logo","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","navigate","handleLogin","e","preventDefault","hasError","trim","length","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","localStorage","setItem","access_token","userId","onLogin","error","alert","inputErrorStyle","borderBottom","outlineColor","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","onFocus","event","placeholder","onBlur","style","_c","$RefreshReg$"],"sources":["/Users/Sabina/Desktop/Baigiamasis/Kursu-Tinklalapis/kursu-tinklalapis-frontend/src/components/LoginForm.js"],"sourcesContent":["/* eslint-disable */\nimport React, { useState } from 'react';\nimport './RegistrationLoginForm.css';\nimport { useNavigate } from 'react-router-dom';\nimport logo from './logo.png';\n\nfunction Login(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    let hasError = false;\n\n    if (!email.trim()) {\n      setEmailError('El. pastas negali būti tuščias');\n      hasError = true;\n    } else {\n      setEmailError('');\n    }\n\n    if (!password.trim()) {\n      setPasswordError('Slaptažodis negali būti tuščias');\n      hasError = true;\n    } else if (password.length < 8) {\n      setPasswordError('Slaptažodis turi būti bent 8 simbolių ilgio');\n      hasError = true;\n    } else {\n      setPasswordError('');\n    }\n\n    if (!hasError) {\n      try {\n        const response = await fetch('/user/authenticate', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ email, password }),\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data);\n          console.log(JSON.stringify(data));\n          localStorage.setItem('token', data.access_token);\n          console.log(data.userId);\n          localStorage.setItem('userId', data.userId);\n          props.onLogin({ email });\n          navigate('/');\n        } else {\n          setEmailError('Vartotojas nerastas');\n        }\n      } catch (error) {\n        console.error(error);\n        alert('Įvyko klaida');\n      }\n    }\n  };\n\n  const inputErrorStyle = {\n    borderBottom: '1px solid red',\n    outlineColor: 'red',\n  };\n\n  return (\n    <div className=\"RegistrationForm\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <form className=\"containerLogin\" onSubmit={handleLogin}>\n      <h2 className='registracija-title'>Prisijunkite</h2>\n      {emailError ==='Vartotojas nerastas'}\n        <div>\n          <label htmlFor=\"username\"></label>\n          <input \n            type=\"text\" \n            id=\"email\" \n            value={email} \n            onChange={(e) => setEmail(e.target.value)}\n            onFocus={(event) => event.target.placeholder = ''}\n            onBlur={(event) => event.target.placeholder = 'El. pastas'}\n            style={emailError ? inputErrorStyle : null}\n            placeholder=\"El. pastas\"\n          />\n          {emailError && <span className=\"error\">{emailError}</span>}\n        </div>\n        <div>\n          <label htmlFor=\"password\"></label>\n          <input \n            type=\"password\" \n            id=\"password\" \n            value={password} \n            onChange={(e) => setPassword(e.target.value)}\n            onFocus={(event) => event.target.placeholder = ''}\n            onBlur={(event) => event.target.placeholder = 'Slaptažodis'}\n            style={passwordError ? inputErrorStyle : null}\n            placeholder=\"Slaptažodis\"\n          />\n          {passwordError && <span className=\"error\">{passwordError}</span>}\n        </div>\n        <button type=\"submit\">Prisijungti</button>\n      </form>\n    </div>\n  );\n  }\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}